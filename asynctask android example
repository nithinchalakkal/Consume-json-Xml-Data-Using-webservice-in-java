
	private ProgressDialog prgDialog;
	public static final int progress_bar_type = 0;
	
	
	
	
	protected Dialog onCreateDialog(int id) {
		switch (id) {
		case progress_bar_type:
			prgDialog = new ProgressDialog(this);
			prgDialog.setMessage("Downloading  file. Please wait...");
			prgDialog.setIndeterminate(false);
			prgDialog.setMax(100);
			prgDialog.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);
			prgDialog.setCancelable(false);
			prgDialog.show();
			return prgDialog;
		default:
			return null;
		}
	}
	


	class DownloadfromInternet extends AsyncTask<String, String, String> {
		String passingresult = "";
		@SuppressWarnings("deprecation")
		@Override
		protected void onPreExecute() {
			super.onPreExecute();
			showDialog(progress_bar_type);
		}
		@Override
		protected String doInBackground(String... f_url) {
			try {
			if (isOnline()) {
			//Call network related fuction here
			// If its a Soap Request - Add WebserviceCall.java class here 
			// If its a Restfull/Direct URL Request - Add (Common Method to access server data) method.
			   passingresult ="result";
			 
				} else {
					passingresult = "networkError";
					return passingresult;
				}
				return passingresult;
			} catch (Exception e) {
				Log.e("Error: ", e.getMessage());
			}
			return passingresult;
		}
		protected void onProgressUpdate(String... progress) {
			prgDialog.setProgress(Integer.parseInt(progress[0]));
		}
		@SuppressWarnings("deprecation")
		@Override
		protected void onPostExecute(String passingresult) {
			dismissDialog(progress_bar_type);
			Toast.makeText(getApplicationContext(),
					"Download complete" + passingresult, Toast.LENGTH_LONG)
					.show();
			new AlertDialog.Builder(Activity.this)
					.setTitle("Data List")
					.setMessage(passingresult)
					.setPositiveButton(android.R.string.yes,
							new DialogInterface.OnClickListener() {
								public void onClick(DialogInterface dialog,
										int which) {
									// continue with delete
								}
							})
					.setNegativeButton(android.R.string.no,
							new DialogInterface.OnClickListener() {
								public void onClick(DialogInterface dialog,
										int which) {
									// do nothing
								}
							}).setIcon(android.R.drawable.ic_dialog_alert)
					.show();
		}
	}
	public boolean isOnline() {
		ConnectivityManager cm = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);
		NetworkInfo netInfo = cm.getActiveNetworkInfo();
		return netInfo != null && netInfo.isConnectedOrConnecting();
	}

	
